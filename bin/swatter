#!/usr/bin/env ruby

def test_passed?(test_cmd)
  `bundle exec #{test_cmd}`
  $?.success?
end

def found_bad_commit?(output)
# 4609b913eb9faf273fa084881ec9ee39c44d9376 is the first bad commit
  !output.index("is the first bad commit").nil?
end

test_cmd = ARGV.join(' ')
puts "Use this automated test: '#{test_cmd}'"
`bundle exec #{test_cmd}`
result = $?.success?

puts "Test has #{result ? 'passed' : 'failed'}."

# First find a commit where test passes
last_good_commit = "62b8b846c3633c83fb44fbc10262c15869ba3d18"
`git bisect start`
`git bisect good #{last_good_commit}`
`git bisect bad HEAD`

output = ""
while !found_bad_commit?(output) do
  output = if test_passed?(test_cmd)
    `git bisect good`
  else
    `git bisect bad`
  end

  puts output
end

`git bisect reset`
