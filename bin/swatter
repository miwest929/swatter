#!/usr/bin/env ruby

def test_passed?(test_cmd)
  `bundle exec #{test_cmd}`
  $?.success?
end

def good_commit?(output)
# 4609b913eb9faf273fa084881ec9ee39c44d9376 is the first bad commit
  output.index("is the first bad commit").nil?
end

if ARGV.empty?
  puts "Usage: swatter <start-commit-sha-id> <command-to-run-failing-test>"
  puts "Example: swatter 4609b913eb9faf273fa084881ec9ee39c44d9376 cucumber features/show.feature:11"
else
  start_commit = ARGV.shift
  test_cmd = ARGV.join(' ')
  puts "Starting git bisect at this commit: #{start_commit}"
  puts "Use this automated test: '#{test_cmd}'"
  `bundle exec #{test_cmd}`
  result = $?.success?

  if !result
    `git bisect start`
    `git bisect good #{start_commit}`
    `git bisect bad HEAD`

    output = ""
    while good_commit?(output) do
      output = if test_passed?(test_cmd)
        `git bisect good`
      else
        `git bisect bad`
      end

      puts output
    end
    `git bisect reset`
  else
    puts "Specified test: #{test_cmd}, at commit: #{start_commit} passes. Nothing to do."
  end
end
